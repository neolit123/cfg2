0.99.0 - 12.02.2016
- preparation for a 1.0.0 release

0.34.0 - 09.02.2016
- hide the library structures from the user
- make cfg_init() a static function, cfg_alloc() should always be used instead
- add cfg_verbose_set()
- simplify the test source

0.33.0 - 09.02.2016
- remove the 'index' field of cfg_entry_t
- small performance improvements when traversing the entry list
- cache the latest entry which is added or set to a new value

0.32.0 - 05.02.2016
- add support for a dynamic library build on Win32 and potentially any *Unix
- better Makefile and .gitignore files
- add the ./obj folder

0.31.0 - 05.02.2016
- add cfg_section_delete(), cfg_entry_delete(), cfg_clear()
- more error reporting fixes

0.30.0 - 20.01.2016
- use fixed width integers
- value <-> integer fixes
- better MSVC compatibility
- better GCC-linux compatibility
- remove comments about ANSI C as the library uses a couple of C99 features.
it can still compile with 'gcc -ansi -pedantic', though!
- API changes related to interger types

0.29.0 - 18.01.2016
- conceptual rename of 'error' to 'status' - i.e. cfg_error_t is
now cfg_status_t
- make it possible to store and retrieve the last status in the library object
- better error reporting
- remove some redundant fields in the library object

0.28.0 - 17.01.2016
- implement buffer / file writing methods (this makes the library R/W)
- major re-arrange and rename of most methods in the header
- fix for a odd bug where the last processed character was not well captured
- more improvements in cfg_unescape()
- add functions to convert a number to string
- use the hash generator seed for the root section hash macro
- implement cfg_char_to_hex() (the reverse of cfg_hex_to_char())

0.27.0 - 15.01.2016
- remove cfg_entry_value_hex_to_char()
- simplify cfg_section_value_get()
- don't require explicit /t, /r, /b, etc in the input buffer

0.26.0 - 14.01.2016
- remove the cfg_value_get_* functions
- make cfg_value_set/get() use the root section by default

0.25.0 - 13.01.2016
- add cfg_section_value_set()
- cfg_value_set() now has an extra argument 'add'
- fix some typos and context in comments

0.24.1 - 03.11.2015
- disable c++ name mangling in the header

0.24.0 - 16.10.2015
- stdio.h include location fix
- add verbosity check for equal sign warnings

0.23.0 - 14.10.2015
- don't escape user values from C
- add optional argument to cfg_free()
- add cfg_entry_value_get()
- add cfg_alloc()
- fix some typos and context in README

0.22.0 - 14.10.2015
- much safer parser; but there are still some ways to trick it into
allocating bad key/values
- unescaped quotes now preserve whitespace instead of escaped ones
- allow the parser to warn about unclosed quotes
- allow the parser to warn about missing equal signs on lines
- cleanup and more test cases in test.cfg
- support both # and ; comment characters

0.21.0 - 13.10.2015
- improve the parser to store sections even if empty
- avoid allocating zero length entries and sections
- swap the default key/value and section separator characters
- convert separator characters to spaces if found in the input string

0.20.0 - 11.10.2015
- allow cfg_parse_buffer() to receive a sz argument
- remove second argument of cfg_init()
- small code and test.cfg cleanup

0.19.0 - 10.10.2015
- added support for section enumeration
- some code cleanup

0.18.0 - 10.10.2015
- deprecate cfg_key_get() as this requires hashing of values which can be
expensive
- expose cfg_hash_get() as an API function
- add local implementation of strdup()
- comment cleanup in the header

0.17.0 - 10.10.2015
- added a function to open FILE*
- added the cfg_bool type
- cleanup of the header

0.16.0 - 09.10.2015
- added support for binary values

0.15.0 - 09.10.2015
- add section support!
- support quoted keys and values to preserve whitespace
- optimize the cache: the cache is now a simple list of cfg_entry_t pointers
- ingore the cache_size argument in cfg_init(); the user should set it instead
directly
- coding style cleanup

0.14.0 - 08.10.2015
- greatly improve the parser
- expose missing API function
- cleanup

0.13.0 - 08.10.2015
- implement support for escaped '=' characters

0.12.0 - 19.11.2013
- improved memory organization via the sub-struct cfg_entry_t

0.11.0 - 15.10.2012
- added better cfg_cache_size_set() handling

0.10.0 - 14.10.2012
- initial release
